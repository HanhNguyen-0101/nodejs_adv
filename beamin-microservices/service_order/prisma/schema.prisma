generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model categories {
  category_id Int        @id @default(autoincrement())
  name        String     @unique @db.VarChar(255)
  description String?
  created_at  DateTime?  @default(now()) @db.Timestamp(6)
  products    products[]
}

model order_items {
  order_item_id Int       @id @default(autoincrement())
  order_id      Int?
  product_id    Int?
  quantity      Int
  price         Decimal   @db.Decimal(10, 2)
  orders        orders?   @relation(fields: [order_id], references: [order_id], onDelete: NoAction, onUpdate: NoAction)
  products      products? @relation(fields: [product_id], references: [product_id], onDelete: NoAction, onUpdate: NoAction)
}

model orders {
  order_id    Int           @id @default(autoincrement())
  user_id     Int?
  order_date  DateTime?     @default(now()) @db.Timestamp(6)
  total       Decimal       @db.Decimal(10, 2)
  order_items order_items[]
  users       users?        @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
  shipping    shipping[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model products {
  product_id  Int           @id @default(autoincrement())
  name        String        @db.VarChar(255)
  description String?
  price       Decimal       @db.Decimal(10, 2)
  quantity    Int
  category_id Int?
  shop_id     Int?
  created_at  DateTime?     @default(now()) @db.Timestamp(6)
  order_items order_items[]
  categories  categories?   @relation(fields: [category_id], references: [category_id], onDelete: NoAction, onUpdate: NoAction)
  shops       shops?        @relation(fields: [shop_id], references: [shop_id], onDelete: NoAction, onUpdate: NoAction)
}

model shipping {
  shipping_id     Int       @id @default(autoincrement())
  order_id        Int?
  address         String    @db.VarChar(255)
  city            String    @db.VarChar(255)
  state           String?   @db.VarChar(255)
  postal_code     String?   @db.VarChar(20)
  country         String    @db.VarChar(255)
  shipped_date    DateTime? @db.Timestamp(6)
  shipping_method String    @db.VarChar(255)
  created_at      DateTime? @default(now()) @db.Timestamp(6)
  orders          orders?   @relation(fields: [order_id], references: [order_id], onDelete: NoAction, onUpdate: NoAction)
}

model shops {
  shop_id    Int        @id @default(autoincrement())
  name       String     @db.VarChar(255)
  address    String?    @db.VarChar(255)
  created_at DateTime?  @default(now()) @db.Timestamp(6)
  products   products[]
}

model users {
  user_id       Int       @id @default(autoincrement())
  username      String    @unique @db.VarChar(255)
  password_hash String    @db.VarChar(255)
  email         String    @unique @db.VarChar(255)
  created_at    DateTime? @default(now()) @db.Timestamp(6)
  orders        orders[]
}
